[{"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/index.js":"1","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/App.js":"2","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/Context/ChatProvider.js":"3","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/screens/LoginPage.js":"4","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/screens/ChatsPage.js":"5","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/Auth/SignUp.js":"6","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/Auth/Login.js":"7","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/Chating.js":"8","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/MyChats.js":"9","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/Slide.js":"10","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ChatLoading.js":"11","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/SingleChat.js":"12","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UserListItem.js":"13","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ProfileModal.js":"14","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/config/chatLogic.js":"15","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UserBadgeItem.js":"16","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ScrolableChat.js":"17","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UpdateCommunity.js":"18","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/CommunityChatModal.js":"19"},{"size":474,"mtime":1728812098780,"results":"20","hashOfConfig":"21"},{"size":386,"mtime":1728812098777,"results":"22","hashOfConfig":"21"},{"size":917,"mtime":1728812098777,"results":"23","hashOfConfig":"21"},{"size":1521,"mtime":1729162788619,"results":"24","hashOfConfig":"21"},{"size":818,"mtime":1728812098780,"results":"25","hashOfConfig":"21"},{"size":4021,"mtime":1729162662045,"results":"26","hashOfConfig":"21"},{"size":2525,"mtime":1728843157177,"results":"27","hashOfConfig":"21"},{"size":616,"mtime":1728812098778,"results":"28","hashOfConfig":"21"},{"size":2884,"mtime":1729167355592,"results":"29","hashOfConfig":"21"},{"size":6062,"mtime":1729166003695,"results":"30","hashOfConfig":"21"},{"size":515,"mtime":1728812098778,"results":"31","hashOfConfig":"21"},{"size":6858,"mtime":1729167517910,"results":"32","hashOfConfig":"21"},{"size":962,"mtime":1728812098780,"results":"33","hashOfConfig":"21"},{"size":971,"mtime":1728812098779,"results":"34","hashOfConfig":"21"},{"size":1518,"mtime":1728812098780,"results":"35","hashOfConfig":"21"},{"size":455,"mtime":1728812098780,"results":"36","hashOfConfig":"21"},{"size":2095,"mtime":1728812098779,"results":"37","hashOfConfig":"21"},{"size":7693,"mtime":1729166655379,"results":"38","hashOfConfig":"21"},{"size":5323,"mtime":1729166514142,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"125hd3g",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/index.js",[],[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/App.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/Context/ChatProvider.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/screens/LoginPage.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/screens/ChatsPage.js",["105"],[],"import React from \"react\"\r\nimport { ChatState } from \"../Context/ChatProvider\"\r\nimport MyChats from \"../components/chats/MyChats\";\r\nimport Chating from \"../components/chats/Chating\";\r\nimport Slide from \"../components/chats/Slide\";\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nexport default function ChatsPage() {\r\n    const {user,setSelectedChat}=ChatState();\r\n    const [fetchAgain, setFetchAgain] = useState(false)\r\n    // console.log(user);\r\n\r\n\r\n  return (\r\n  <div style={{width:\"100%\"}}>\r\n        {user && <Slide/>}\r\n         <Box display='flex' justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\" >\r\n        {user && <MyChats fetchAgain={fetchAgain}/>}\r\n        {user && <Chating fetchAgain={fetchAgain} setFetchAgain={setFetchAgain}/>}\r\n        </Box>\r\n  </div>\r\n  )\r\n}\r\n","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/Auth/SignUp.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/Auth/Login.js",["106"],[],"import {\r\n  FormControl,\r\n  FormLabel,\r\n  VStack,\r\n  Input,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(\"false\");\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n  const handelClick = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const {data}  = await axios.post(\r\n        \"http://localhost:5080/api/user/login\",\r\n        { email:email, password:password },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      navigate(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <VStack spacing=\"3px\">\r\n      <FormControl>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\r\n        <FormLabel>Password</FormLabel>\r\n        <Input type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n        <Button\r\n          colorScheme=\"teal\"\r\n          width=\"100%\"\r\n          mt={15}\r\n          size=\"md\"\r\n          onClick={handelClick}\r\n          // isLoading={loading}\r\n        >\r\n          LogIn\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"red\"\r\n          width=\"100%\"\r\n          mt={15}\r\n          size=\"md\"\r\n          onClick={() => {\r\n            setEmail(\"guest123@mail.com\");\r\n            setPassword(\"1234\");\r\n          }}\r\n        >\r\n          Guest User\r\n        </Button>\r\n      </FormControl>\r\n    </VStack>\r\n  );\r\n}\r\n","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/Chating.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/MyChats.js",["107","108","109"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport { Box, Button, useToast } from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { Stack ,Text} from \"@chakra-ui/react\";\r\nimport { getSender } from \"../../config/chatLogic\";\r\nimport CommunityChatModal from \"./CommunityChatModal\";\r\nexport default function MyChats(props) {\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const { user, setUser, selectedChat, setSelectedChat, chats, setChats } =ChatState();\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"http://localhost:5080/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"error in rendering chats\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [props.fetchAgain]);\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      h=\"90%\"\r\n      w={{ base: \"100%\", md: \"35%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Communities\r\n        <CommunityChatModal>\r\n        <Button\r\n          display=\"flex\"\r\n          fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n          rightIcon={<AddIcon />}\r\n        >\r\n          New Community Chat\r\n        </Button>\r\n        </CommunityChatModal>\r\n      </Box>\r\n    \r\n      {\r\n        chats?(\r\n          chats.map(function(chat){\r\n            return(\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"#001C30\"}\r\n                px={3}\r\n                py={2}\r\n                mb={1}\r\n                w=\"100%\" \r\n                borderRadius=\"lg\"\r\n                key={chat._id} >\r\n                <Text>\r\n                {chat.isCommunity?(chat.chatName):(getSender(loggedUser,chat))}\r\n                  \r\n                </Text></Box>\r\n            )\r\n          })\r\n          \r\n        ):(\r\n          <ChatLoading/>\r\n        )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n",[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/Slide.js",["110","111","112","113","114","115","116"],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ChatLoading.js",["117","118"],[],"import { Stack } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { Skeleton, SkeletonCircle, SkeletonText } from '@chakra-ui/react'\r\nfunction ChatLoading() {\r\n  return (\r\n    \r\n  <Stack>\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n  <Skeleton height='45px' />\r\n</Stack>\r\n  )\r\n}\r\n\r\nexport default ChatLoading","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/SingleChat.js",["119","120","121","122","123"],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UserListItem.js",["124"],[],"import React from 'react'\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from '../../Context/ChatProvider'\r\nfunction UserListItem({data,handelFunction}) {\r\n    console.log(data);\r\n    // const {user}=ChatState();\r\n  return (\r\n    <Box\r\n      onClick={handelFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={data.name}\r\n        src={data.pic}\r\n      />\r\n      <Box>\r\n        <Text>{data.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {data.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UserListItem","/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ProfileModal.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/config/chatLogic.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UserBadgeItem.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/ScrolableChat.js",[],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/UpdateCommunity.js",["125"],[],"/Users/srushtidiware/Desktop/SwiftChat/frontend/src/components/chats/CommunityChatModal.js",["126","127","128"],[],"import React from \"react\";\r\nimport { Button, FormControl, useToast, Input } from \"@chakra-ui/react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Box,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport UserBadgeItem from \"./UserBadgeItem\";\r\nfunction CommunityChatModal({ children }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [communityChatName, setCommunityChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState();\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const { user, chats, setChats } = ChatState();\r\n  const searchHandel = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`http://localhost:5080/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"error\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    }\r\n  };\r\n  const handelSubmit =async () => {\r\n    if(!communityChatName || !selectedUsers){\r\n      toast({\r\n        title: \"please fill the field\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return ;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const {data}=await axios.post('http://localhost:5080/api/chat/community',{\r\n        name:communityChatName,\r\n        users:JSON.stringify(selectedUsers.map((u)=>u._id))\r\n      },config);\r\n      setChats([data,...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"new community chat created\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"failed to create chat\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    }\r\n  };\r\n  const handelCommunity=(userToAdd)=>{\r\n      if(selectedUsers.includes(userToAdd)){\r\n        toast({\r\n        title: \"Already Selected\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n      }\r\n      setSelectedUsers([...selectedUsers,userToAdd]);\r\n\r\n  };\r\n  const handelDelete=(userToDelete)=>{\r\n     setSelectedUsers(selectedUsers.filter(sel=>sel._id !=userToDelete._id))\r\n  }\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work Sans\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Community\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n          ></ModalBody>\r\n          <FormControl>\r\n            <Input\r\n              placeholder=\"Chat Name\"\r\n              mb={3}\r\n              w=\"90%\"\r\n              ml={2}\r\n              onChange={(e) => {\r\n                setCommunityChatName(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <Input\r\n              placeholder=\"Select users eg:John, Sophie...\"\r\n              w=\"90%\"\r\n              mb={3}\r\n              ml={2}\r\n              onChange={(e) => {\r\n                searchHandel(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n          {selectedUsers.map(function(user){\r\n            return (\r\n              <UserBadgeItem key={user._id} data={user} handelFunction={()=>handelDelete(user)} />\r\n            )\r\n          })}\r\n          </Box>\r\n          {loading ? (\r\n            <div>loading</div>\r\n          ) : searchResult ? (\r\n            searchResult.slice(0,3).map(function (user) {\r\n              return (\r\n                <UserListItem key={user._id} data={user} handelFunction={()=>{handelCommunity(user)}}/>\r\n              );\r\n            })\r\n          ) : (\r\n            <ChatLoading />\r\n          )}\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={handelSubmit}>\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CommunityChatModal;\r\n",{"ruleId":"129","severity":1,"message":"130","line":9,"column":17,"nodeType":"131","messageId":"132","endLine":9,"endColumn":32},{"ruleId":"129","severity":1,"message":"133","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":17},{"ruleId":"129","severity":1,"message":"134","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"129","severity":1,"message":"135","line":12,"column":17,"nodeType":"131","messageId":"132","endLine":12,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":36,"column":6,"nodeType":"138","endLine":36,"endColumn":24,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":20,"column":18,"nodeType":"131","messageId":"132","endLine":20,"endColumn":29},{"ruleId":"129","severity":1,"message":"141","line":20,"column":31,"nodeType":"131","messageId":"132","endLine":20,"endColumn":42},{"ruleId":"129","severity":1,"message":"142","line":28,"column":8,"nodeType":"131","messageId":"132","endLine":28,"endColumn":20},{"ruleId":"129","severity":1,"message":"143","line":31,"column":64,"nodeType":"131","messageId":"132","endLine":31,"endColumn":80},{"ruleId":"129","severity":1,"message":"144","line":112,"column":10,"nodeType":"131","messageId":"132","endLine":112,"endColumn":19},{"ruleId":"129","severity":1,"message":"145","line":112,"column":21,"nodeType":"131","messageId":"132","endLine":112,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":143,"column":40,"nodeType":"148","messageId":"149","endLine":143,"endColumn":42},{"ruleId":"129","severity":1,"message":"150","line":3,"column":20,"nodeType":"131","messageId":"132","endLine":3,"endColumn":34},{"ruleId":"129","severity":1,"message":"151","line":3,"column":36,"nodeType":"131","messageId":"132","endLine":3,"endColumn":48},{"ruleId":"129","severity":1,"message":"152","line":17,"column":21,"nodeType":"131","messageId":"132","endLine":17,"endColumn":34},{"ruleId":"129","severity":1,"message":"153","line":18,"column":8,"nodeType":"131","messageId":"132","endLine":18,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":34,"column":19,"nodeType":"156","messageId":"157","endLine":34,"endColumn":21},{"ruleId":"136","severity":1,"message":"158","line":98,"column":6,"nodeType":"138","endLine":98,"endColumn":8,"suggestions":"159"},{"ruleId":"136","severity":1,"message":"137","line":102,"column":6,"nodeType":"138","endLine":102,"endColumn":20,"suggestions":"160"},{"ruleId":"129","severity":1,"message":"161","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":209,"column":17,"nodeType":"164","messageId":"165","endLine":209,"endColumn":40},{"ruleId":"129","severity":1,"message":"166","line":12,"column":3,"nodeType":"131","messageId":"132","endLine":12,"endColumn":7},{"ruleId":"129","severity":1,"message":"167","line":17,"column":10,"nodeType":"131","messageId":"132","endLine":17,"endColumn":17},{"ruleId":"154","severity":1,"message":"168","line":112,"column":57,"nodeType":"156","messageId":"157","endLine":112,"endColumn":59},"no-unused-vars","'setSelectedChat' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Stack' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'AvatarBadge' is defined but never used.","'AvatarGroup' is defined but never used.","'UserListItem' is defined but never used.","'setNotifications' is assigned a value but never used.","'placement' is assigned a value but never used.","'setPlacement' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SkeletonCircle' is defined but never used.","'SkeletonText' is defined but never used.","'getSenderFull' is defined but never used.","'ProfileModal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["170"],["171"],"'ChatState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Text' is defined but never used.","'AddIcon' is defined but never used.","Expected '!==' and instead saw '!='.",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [fetchChats, props.fetchAgain]",{"range":"178","text":"179"},"Update the dependencies array to be: [user]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchChats, selectedChat]",{"range":"182","text":"183"},[1251,1269],"[fetchChats, props.fetchAgain]",[3021,3023],"[user]",[3114,3128],"[fetchChats, selectedChat]"]